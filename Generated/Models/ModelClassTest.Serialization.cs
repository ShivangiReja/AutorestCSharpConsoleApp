// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace AutorestCSharpConsoleApp.Models
{
    public partial class ModelClassTest : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(StringProperty))
            {
                writer.WritePropertyName("String_Property");
                writer.WriteStringValue(StringProperty);
            }
            writer.WritePropertyName("Enum_Property");
            writer.WriteStringValue(EnumProperty.ToSerialString());
            if (Optional.IsDefined(ObjProperty))
            {
                writer.WritePropertyName("Obj_Property");
                writer.WriteObjectValue(ObjProperty);
            }
            writer.WriteEndObject();
        }

        internal static ModelClassTest DeserializeModelClassTest(JsonElement element)
        {
            Optional<string> stringProperty = default;
            EnumProperty enumProperty = default;
            Optional<Product> objProperty = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("String_Property"))
                {
                    stringProperty = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Enum_Property"))
                {
                    enumProperty = property.Value.GetString().ToEnumProperty();
                    continue;
                }
                if (property.NameEquals("Obj_Property"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    objProperty = Product.DeserializeProduct(property.Value);
                    continue;
                }
            }
            return new ModelClassTest(stringProperty.Value, enumProperty, objProperty.Value);
        }
    }
}
